{"version":3,"sources":["components/SongList.js","actions/index.js","components/SongDetail.js","components/App.js","reducers/index.js","index.js"],"names":["SongList","this","props","songs","map","song","className","key","title","onClick","selectSong","renderList","Component","connect","state","type","payload","selectedSong","duration","App","combineReducers","action","ReactDOM","render","store","createStore","reducers","document","querySelector"],"mappings":"oOAKMA,E,qLACY,IAAD,OACT,OAAOC,KAAKC,MAAMC,MAAMC,KAAI,SAACC,GACzB,OACI,yBAAKC,UAAU,OAAOC,IAAKF,EAAKG,OAC5B,yBAAKF,UAAU,yBACX,4BAAQA,UAAU,oBAAoBG,QAAS,kBAAM,EAAKP,MAAMQ,WAAWL,KAA3E,WAIJ,yBAAKC,UAAU,WAAWD,EAAKG,a,+BAU3C,OAAO,yBAAKF,UAAU,mBAAmBL,KAAKU,kB,GApB/BC,aA+BRC,eAPS,SAAAC,GAIpB,MAAO,CAAEX,MAAOW,EAAMX,SAGc,CAAEO,WCnChB,SAAAL,GAEtB,MAAO,CACHU,KAAM,gBACNC,QAASX,KD+BFQ,CAAyCb,GEhBzCa,eAJS,SAAAC,GACpB,MAAO,CAAET,KAAMS,EAAMG,gBAGVJ,EAjBI,SAAC,GAAc,IAAZR,EAAW,EAAXA,KAElB,OAAKA,EAID,6BACI,4CACA,qCAAWA,EAAKG,MAAhB,IAAuB,6BAAvB,cAAyCH,EAAKa,WAL3C,iDCeAC,EAfH,WACR,OACI,yBAAKb,UAAU,qBACX,yBAAKA,UAAU,UACX,yBAAKA,UAAU,qBACX,kBAAC,EAAD,OAEJ,yBAAKA,UAAU,qBACX,kBAAC,EAAD,UCKLc,cAAgB,CAC3BjB,MAlBiB,WACjB,MAAO,CACH,CAAEK,MAAO,YAAaU,SAAU,QAChC,CAAEV,MAAO,WAAYU,SAAU,QAC/B,CAAEV,MAAO,WAAYU,SAAU,QAC/B,CAAEV,MAAO,qBAAsBU,SAAU,UAc7CD,aAVwB,WAAkC,IAAjCA,EAAgC,uDAAjB,KAAMI,EAAW,uCACzD,MAAmB,kBAAhBA,EAAON,KACCM,EAAOL,QAGXC,KCTXK,IAASC,OACL,kBAAC,IAAD,CAAUC,MAAOC,YAAYC,IACzB,kBAAC,EAAD,OAEJC,SAASC,cAAc,Y","file":"static/js/main.1eb3f7c4.chunk.js","sourcesContent":["//import React from 'react';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { selectSong } from '../actions';\r\n\r\nclass SongList extends Component { //React.Component\r\n    renderList() {\r\n        return this.props.songs.map((song) => {\r\n            return (\r\n                <div className=\"item\" key={song.title}>\r\n                    <div className=\"right floated content\">\r\n                        <button className=\"ui button primary\" onClick={() => this.props.selectSong(song)}>\r\n                            Select\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"content\">{song.title}</div>\r\n                </div>\r\n            );\r\n        });\r\n    }\r\n\r\n    render() {\r\n        //console.log(this.props);\r\n        //console.log(this.props.songs);\r\n        // this.props === { songs: state.songs }\r\n        return <div className=\"ui divided list\">{this.renderList()}</div>;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    //console.log(state);\r\n    //console.log(state);\r\n\r\n    return { songs: state.songs }; //state;\r\n}\r\n\r\nexport default connect(mapStateToProps, { selectSong })(SongList);\r\n\r\n","// Action creator\r\nexport const selectSong = song => {\r\n    // Return an action\r\n    return {\r\n        type: 'SONG_SELECTED',\r\n        payload: song\r\n    };\r\n};\r\n\r\n//export default selectSong;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nconst SongDetail = ({ song }) => {\r\n    //console.log(props);\r\n    if (!song) {\r\n        return <div>Select a song</div>\r\n    }\r\n    return (\r\n        <div>\r\n            <h3>Details for:</h3>\r\n            <p>Title: {song.title} <br /> Duration: {song.duration}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return { song: state.selectedSong }\r\n};\r\n\r\nexport default connect(mapStateToProps)(SongDetail);","import React from 'react';\r\nimport SongList from './SongList';\r\nimport SongDetail from './SongDetail';\r\n//import { selectSong } from '../actions';\r\n//import actions from '../actions/index'; -> '../actions'\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className=\"ui container grid\">\r\n            <div className=\"ui row\">\r\n                <div className=\"column eight wide\">\r\n                    <SongList />\r\n                </div>\r\n                <div className=\"column eight wide\">\r\n                    <SongDetail />\r\n                </div>\r\n            </div>\r\n        </div >\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import { combineReducers } from 'redux';\r\n\r\nconst songsReducer = () => {\r\n    return [\r\n        { title: 'No Scrubs', duration: '4:05' },\r\n        { title: 'Macarena', duration: '2:30' },\r\n        { title: 'All Star', duration: '3:15' },\r\n        { title: 'I Want it That Way', duration: '1:45' }\r\n    ];\r\n};\r\n\r\nconst selectedSongReducer = (selectedSong = null, action) => {\r\n    if(action.type === 'SONG_SELECTED') {\r\n        return action.payload;\r\n    }\r\n\r\n    return selectedSong;\r\n};\r\n\r\nexport default combineReducers({\r\n    songs: songsReducer,\r\n    selectedSong: selectedSongReducer\r\n});","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\nimport App from './components/App';\r\nimport reducers from './reducers';\r\n\r\nReactDOM.render(\r\n    <Provider store={createStore(reducers)}>\r\n        <App />\r\n    </Provider>,\r\n    document.querySelector('#root')\r\n);\r\n"],"sourceRoot":""}